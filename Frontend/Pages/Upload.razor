@page "/upload"
@inject IGenerosService generosService
@inject IPeliculasService peliculasService
@inject IPersonajesService personajesService
<h3>Upload</h3>
<MudSelect T="int" @bind-Value="@selected" Label="Selecciona Item a subir" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem  Value="@(0)" >Genero</MudSelectItem>
    <MudSelectItem Value="@(1)" >Personaje</MudSelectItem>
    <MudSelectItem Value="@(2)" >Pelicula</MudSelectItem>
</MudSelect>
@if (!string.IsNullOrEmpty(message))
{

    <div class="alert-danger">@message</div>
}
@if(selected==0)
{

    <EditForm Model="@generoDTO" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Nombre" HelperText="Max. 8 characters"
                                  @bind-Value="generoDTO.Nombre" For="@(() => generoDTO.Nombre)" />
                        <MudTextField Label="Imagen" Class="mt-3"
                                  @bind-Value="generoDTO.Imagen" For="@(() => generoDTO.Imagen)" />
                       
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Upload Genero</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>

            <MudItem xs="12">
                <MudText Typo="Typo.body2" Align="Align.Center">
                    Fill out the form correctly to see the success message.
                </MudText>
            </MudItem>
        </MudGrid>
    </EditForm>
}
@if(selected==1)
{
    <EditForm Model="@personajeDTO" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Nombre" HelperText="Max. 8 characters"
                                  @bind-Value="personajeDTO.Nombre" For="@(() => personajeDTO.Nombre)" />
                        <MudTextField Label="Imagen" Class="mt-3"
                                  @bind-Value="personajeDTO.Imagen" For="@(() => personajeDTO.Imagen)" />
                        <MudTextField Label="Edad" Class="mt-3"
                                  @bind-Value="personajeDTO.Edad" For="@(() => personajeDTO.Edad)" />
                        <MudTextField Label="Peso" Class="mt-3"
                                  @bind-Value="personajeDTO.Peso" For="@(() => personajeDTO.Peso)" />
                        <MudTextField Label="Historia" Class="mt-3"
                                  @bind-Value="personajeDTO.Historia" For="@(() => personajeDTO.Historia)" />
                        <MudSelect T="PeliculaSimpleDTO" MultiSelection="true" @bind-SelectedValues="@peliculasSelect" Label="Peliculas">
                            @foreach (var pelis in peliculas)
                            {
                                <MudSelectItem T="PeliculaSimpleDTO" Value="@pelis">@pelis.Titulo</MudSelectItem>
                            }
                        </MudSelect>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Upload Genero</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>

            <MudItem xs="12">
                <MudText Typo="Typo.body2" Align="Align.Center">
                    Fill out the form correctly to see the success message.
                </MudText>
            </MudItem>
        </MudGrid>
    </EditForm>
}
@if (selected == 2)
{
    <EditForm Model="@peliculaDTO" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Titulo" HelperText="Max. 8 characters"
                                  @bind-Value="peliculaDTO.Titulo" For="@(() => peliculaDTO.Titulo)" />
                        <MudTextField Label="Imagen" Class="mt-3"
                                  @bind-Value="peliculaDTO.Imagen" For="@(() => peliculaDTO.Imagen)" />
                        <MudDatePicker Label="Creado " @bind-Date="peliculaDTO.FechaCreacion" />
                        <div class="d-flex flex-column align-center">
                                <MudRating @bind-SelectedValue="peliculaDTO.Calificacion" />
                               
                        </div>
                                 
                        <MudSelect T="PersonajeSimpleDTO" MultiSelection="true" @bind-SelectedValues="@personajesSelect" Label="Personajes">
                            @foreach (var pers in personajes)
                                {
                                    <MudSelectItem T="PersonajeSimpleDTO" Value="@pers">@pers.Nombre</MudSelectItem>
                                }
                        </MudSelect>
                        <MudSelect T="GeneroDTO" MultiSelection="true" @bind-SelectedValues="@generosSelect" Label="Generos">
                            @foreach (var genro in generos)
                            {
                                <MudSelectItem T="GeneroDTO" Value="@genro">@genro.Nombre</MudSelectItem>
                            }
                        </MudSelect>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Upload Genero</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>

            <MudItem xs="12">
                <MudText Typo="Typo.body2" Align="Align.Center">
                    Fill out the form correctly to see the success message.
                </MudText>
            </MudItem>
        </MudGrid>
    </EditForm>
}

@code {
    private int selected = 0;
    //For Upload
    GeneroDTO generoDTO = new GeneroDTO();
    PersonajeModelDTO personajeDTO = new PersonajeModelDTO();
    PeliculaModelDTO peliculaDTO = new PeliculaModelDTO();

    //Retrive items
    List<GeneroDTO> generos = new List<GeneroDTO>();
    List<PeliculaSimpleDTO> peliculas = new List<PeliculaSimpleDTO>();
    List<PersonajeSimpleDTO> personajes = new List<PersonajeSimpleDTO>();

    //Selection items
    private IEnumerable<GeneroDTO> generosSelect { get; set; } = new HashSet<GeneroDTO>();
    private IEnumerable<PeliculaSimpleDTO> peliculasSelect { get; set; } = new HashSet<PeliculaSimpleDTO>();
    private IEnumerable<PersonajeSimpleDTO> personajesSelect { get; set; } = new HashSet<PersonajeSimpleDTO>();

    string message = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        var result = await generosService.GetGeneros();
        if(result.IsSuccess)
            foreach (var item in result.Result)
            {
                generos.Add(item);
            }

        var peliculasGet = await peliculasService.GetPeliculas("",-1,"ASC");
        if(peliculasGet.IsSuccess)
            foreach (var item in peliculasGet.Result)
            {
                peliculas.Add(item);
            }
        var personajesGet = await personajesService.GetPersonajes("", -1, -1);
        if(personajesGet.IsSuccess)
            foreach (var item in personajesGet.Result)
            {
                personajes.Add(item);
            }
    }
    private async Task OnValidSubmit()
    {
        try
        {
            if(selected==0)
            {
                var result = await generosService.AddGenero(generoDTO);
                if (result.IsSuccess)
                {

                    message = "Genero Upload Success";

                }
                message = "Error on genero upload. Please try again... " + result.Error;
            }
            if(selected==1)
            {
                foreach (var item in peliculasSelect.ToList())
                {
                    personajeDTO.Peliculas.Add(item.Id);
                }
                var result = await personajesService.AddPersonaje(personajeDTO);
                if (result.IsSuccess)
                {

                    message = "Personaje Upload Success";

                }
                message = "Error on personaje. Please try again...";
            }
            if (selected == 2)
            {
                try
                {
                    var pjSelected = personajesSelect.ToList();
                    var genroSelected = generosSelect.ToList();
                    foreach (var item in pjSelected)
                    {
                        peliculaDTO.Personajes.Add(item.Id);
                    }
                    foreach (var item in genroSelected)
                    {
                        peliculaDTO.Generos.Add(item.Id.Value);
                    }
                    var result = await personajesService.AddPersonaje(personajeDTO);
                    if (result.IsSuccess)
                    {

                        message = "Pelicula Upload Success";

                    }
                    message = "Error on pelicula. Please try again...";
                }
                catch (Exception)
                {
                    
                    throw;
                }
               
            }
            

        }
        catch (ApiException ex)
        {
            message = ex.Message;

        }
    }
}
